[H1] 03 Integrate Custom Tools Into Your Agent## Problem A company needs create intelligent agent goes beyond standard capabilities language models. It must carry specific actions as:- Retrieving order status CRM system - Automating creation IT tickets - Interacting external systems APIs In addition, solution required improves productivity, increases accuracy, reduces human intervention repetitive tasks.## Solution Azure UseAzure AI Foundry Agent Serviceintegratedcustom toolsoptions, including tools described OpenAPI specification, Azure Functions, function calling. These tools make easy integrate external APIs, event-driven applications, custom functions:-Custom function: Function calling lets describe structure custom functions agent return functions need called along arguments. The agent dynamically identify appropriate functions based definitions. This feature useful integrating custom logic workflowswritten several programming languagesinto AI agents.-Azure Functions: Azure
agent dynamically identify appropriate functions based definitions. This feature useful integrating custom logic workflowswritten several programming languagesinto AI agents.-Azure Functions: Azure Functions let build intelligent, event-driven applications minimal overhead. They support triggers bindings, simplify AI agents interact external systems services. Triggers determine function runs, bindings provide streamlined connections input output data sources.-OpenAPI specification tools: These tools enable Azure AI agent connect external API described OpenAPI 3.0 specification. This provides standardized, automated, scalable API integrations enhance agents capabilities. OpenAPI specifications describe HTTP APIs, helping people understand API works, generate client code, create tests, apply design standards.-Azure Logic Apps: A low-code/no-code option adding workflows connect apps, data, services Logic Apps.## Required Components -Azure AI Foundry Agent Service- One following tools: -
design standards.-Azure Logic Apps: A low-code/no-code option adding workflows connect apps, data, services Logic Apps.## Required Components -Azure AI Foundry Agent Service- One following tools: - Function Tool (Python another supported language) - Azure Functions (event-driven, serverless) - OpenAPI Specification Tools (for HTTP APIs) - Azure Logic Apps (low-code workflows) -azure-identity(e.g.,DefaultAzureCredential) - Azure CLI Cloud Shell deployment configuration -.envfile Foundry project endpoint ## Architecture / Development ### 1. Function CallingStart defining function agent call. For example, heres fake snowfall-tracking function:```pythonimport jsondef recent_snowfall(location: str) -
