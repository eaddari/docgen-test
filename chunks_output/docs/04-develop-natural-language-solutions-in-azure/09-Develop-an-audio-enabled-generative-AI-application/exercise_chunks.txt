[H1] Azure AI Foundry Exercise Summary##Exercise Overview: Audio-Enabled Chat App Azure AI Foundry###ObjectiveBuild simple AI application usingPhi-4-multimodal-instructmodel summarize customer voice messages (audio) produce supplier company.##Steps Completed### 1.Azure AI Foundry Project Setup- Signed Azure AI Foundry- DeployedPhi-4-multimodal-instructmodel new project- Notedendpointdeployment name### 2.Environment Preparation- Used Azure Cloud Shell (PowerShell) classic mode- Cloned repo:Installed dependencies: - **For Python**:azure-identity,azure-ai-projects,azure-ai-inference- **For C#**: relevant NuGet packages### 3. **Configuration**- Edited configuration files: -.env(Python) -appsettings.json(C#)- Added Azure AI project endpoint model deployment name### 4. **Code Enhancements**- Initialized **AIProjectClient** **chat client**- Built request send **audio text prompts** deployed model- Used example audio files: -avocados.mp3-fresas.mp3### 5. **Execution**- Loggedaz login- Ran app
**AIProjectClient** **chat client**- Built request send **audio text prompts** deployed model- Used example audio files: -avocados.mp3-fresas.mp3### 5. **Execution**- Loggedaz login- Ran app prompts: - *"Can summarize customer's voice message?"* - *"Is time-sensitive?"*- Observed model responses based audio inputs## **Key Concepts Learned**- **Multimodal prompts**: Combining text audio request- **Audio input formats**: Usingaudio_url` (with hosted MP3s)-Azure AI Inference SDK: Simplified interaction deployed AI models-Statelessness: No chat history maintained unless implement it##Next Steps & Ideas- Implement chat history tracking- Let users record upload live audio via UI- Test audio files- Try different system messages (e.g., formal, time-aware, etc.)- Experiment different multimodal models- Build web interface application- Add analytics logging capabilities
