Azure AI Translator Service - Complete Guide ProblemYou need build application translate text multiple languages, detect language input, adapt specific vocabulary/industry requirements custom translations. Solution AzureUse Azure AI Translator service detect languages, translate text, transliterate scripts, apply domain-specific custom translations via REST API SDKs. Required ComponentsAzure AI Translator resource (or Azure AI Services multi-resource)Subscription key endpointREST API SDK (Python, C#, etc.)(Optional) Custom Translator portal specialized translation models Architecture & Development1. Provision Translator ResourceIn Azure Portal, create Azure AI Translator resourceAlternatively, create multi-service Azure AI Services resource use Translator APICollect subscription key region, needed API calls2. Core Capabilitiesa. Language DetectionEndpoint: POST input:json[{ "Text": "" }]Sample output:json[{ "language": "ja", "score": 1.0 }]b. Text TranslationEndpoint: POST output:json[
needed API calls2. Core Capabilitiesa. Language DetectionEndpoint: POST input:json[{ "Text": "" }]Sample output:json[{ "language": "ja", "score": 1.0 }]b. Text TranslationEndpoint: POST output:json[ { "translations": [ { "text": "Hello", "to": "en" }, { "text": "Bonjour", "to": "fr" } ] }]c. TransliterationEndpoint: POST "script": "Latn", "text": "Kon'nichiwa" }]3. Translation OptionsWord AlignmentHelps map parts source target:json"alignment": { "proj": "0:4-0:1 6:13-2:3" }Sentence LengthInclude includeSentenceLength=true get:json"sentLen": { "srcSentLen": [12], "transSentLen": [20] }Profanity FilteringOptions:NoAction: translate as-isDeleted: remove profanityMarked: replace asterisks (profanityMarker=Asterisk) tags (profanityMarker=Tag)Example:json{ "text": "JSON ist *** erstaunlich." }4. Define Custom TranslationsUse Custom Translator Portal to:Create workspace linked Translator resourceCreate projectUpload training dataTrain publish modelEach model assigned category IDCall
}4. Define Custom TranslationsUse Custom Translator Portal to:Create workspace linked Translator resourceCreate projectUpload training dataTrain publish modelEach model assigned category IDCall Translator API category=<category-id
