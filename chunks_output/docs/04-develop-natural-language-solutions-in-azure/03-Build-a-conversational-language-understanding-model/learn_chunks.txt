[H1] Azure AI Language - Conversational Language Understanding (CLU)## ProblemYou need create application understands users' natural language input responds appropriately based intent (e.g., request information, take action, etc.).## Solution AzureUseConversational Language Understanding (CLU)Azure AI Languagebuild, train, deploycustom language modelidentify user intents extract entities utterances.## Required Components-Azure AI Language resource-Language StudioREST API/SDK(C# / Python)- Sample data including: -Utterances-Intents-Entities- (Optional) Prebuilt entities (e.g., datetime, number, organization)## Architecture & Development### 1. Provision Resources- In Azure Portal Create Azure AI Language Resource- Retrieveendpointsubscription key- UseLanguage Studiovisually manage CLU project### 2. Understand Azure AI Language CapabilitiesPreconfigured features(no training required):- Summarization, NER, PII detection, Key Phrase Extraction, Sentiment Analysis, Language DetectionLearned
2. Understand Azure AI Language CapabilitiesPreconfigured features(no training required):- Summarization, NER, PII detection, Key Phrase Extraction, Sentiment Analysis, Language DetectionLearned features(require training):-CLU, Custom Text Classification, Custom Named Entity Recognition, Question Answering### 3. Define Intents, Utterances, Entities-Intents: actions user wants (e.g., GetWeather, TurnOnDevice)-Utterances: example user phrases mapped intents-Entities: extractable details within utterances (e.g., device, location)Types entities:-Learned-List-Prebuilt### 4. Use Patterns Disambiguate Similar UtterancesUse templated utterance patterns distinguish similar phrases:Example:-Turn {DeviceName}TurnOnDevice-Is {DeviceName} on?GetDeviceStatus### 5. Add Prebuilt Entity Components- Add 5prebuilt entitiesper project detect common values (e.g., email, date)- Saves time improves recognition common types### 6. Train, Test, Publish, Review-Train: use labeled examples teach model-Test:
5prebuilt entitiesper project detect common values (e.g., email, date)- Saves time improves recognition common types### 6. Train, Test, Publish, Review-Train: use labeled examples teach model-Test: interactively via datasets-Publish: deploy public endpoint-Review & Iterate: refine model based real user input### 7. Query ModelSDK Example (Python):pythonresult = client.analyze_conversation( task={ "kind": "Conversation", "analysisInput": { "conversationItem": { "participantId": "1", "id": "1", "modality": "text", "language": "en", "text": query } }, "parameters": { "projectName": project_name, "deploymentName": deployment_name, "verbose": True } })REST API Example:httpPOST {ENDPOINT}/language/analyze-conversations?api-version={API-VERSION}``````json{ "kind": "Conversation", "analysisInput": { "conversationItem": { "id": "1", "participantId": "1", "text": "Turn light" } }, "parameters": { "projectName": "myProject", "deploymentName": "staging", "stringIndexType": "TextElement_V8" }}##
{ "conversationItem": { "id": "1", "participantId": "1", "text": "Turn light" } }, "parameters": { "projectName": "myProject", "deploymentName": "staging", "stringIndexType": "TextElement_V8" }}## Best Practices & Considerations- Providediverse varied utterancesintent- Includecorrect incorrect grammarexamples-Label consistently preciselyacross training data- Usepatternsprebuilt entitiesreduce manual work- Iterate often:train test deploy review## Sample Exam QuestionsQ: Which service enables intent detection entity extraction user utterances?Conversational Language Understanding (CLU)Q: What utterances intents Azure AI Language?Utterances example user inputs; intents represent meaning goal inputs.Q: How reduce need manually labeled entity data CLU model?Use prebuilt entity components.Q: What's purpose using patterns CLU?To disambiguate similar utterances improve intent classification.Q: What correct lifecycle CLU model?Train Test Publish Review
