Analyze-text-with-Azure-AI-Language ProblemYou need analyze text documents (e.g., reviews) automatically extract insights language, sentiment, key topics, entities, linked entities improve decision-making content understanding. Solution AzureUse Text Analytics capabilities Azure AI Language analyze documents. It enables language detection, sentiment analysis, key phrase extraction, named entity recognition, detection linked entities via SDK REST API. Required ComponentsAzure AI Language resourceEndpoint subscription key (from Azure Portal)Text Analytics SDK C# Python (azure-ai-textanalytics==5.3.0)(Optional) .env appsettings.json secure key configurationCloud Shell + GitHub repo: Architecture / Development1. Provision Azure AI Language ResourceIn Azure Portal Create resource Search "Language Service"Use Pricing tier F0 (free) availableOnce deployed, go Keys Endpoint retrieve connection details2. Clone Code Repository Azure Cloud ShellbashCopiaModificarm -r mslearn-ai-language -fgit
Service"Use Pricing tier F0 (free) availableOnce deployed, go Keys Endpoint retrieve connection details2. Clone Code Repository Azure Cloud ShellbashCopiaModificarm -r mslearn-ai-language -fgit clone mslearn-ai-language/Labfiles/01-analyze-text3. Install SDK & Configure AppNavigate to:cd Python/text-analysis cd C-Sharp/text-analysisPython:bashCopiaModificapython -m venv labenv./labenv/bin/Activate.ps1pip install -r requirements.txt azure-ai-textanalytics==5.3.0C#:bashCopiaModificadotnet add package Azure.AI.TextAnalytics --version 5.3.04. Update Config File Azure CredentialsPython: edit .envC#: edit appsettings.jsonAdd ai_key ai_endpoint Text Analysis Functionalitiesa. Language DetectionDetects language text sample.Python:pythonCopiaModificadetectedLanguage = ai_client.detect_language(documents=[text])[0]print("Language:", detectedLanguage.primary_language.name)C#:csharpCopiaModificaDetectedLanguage detectedLanguage = aiClient.DetectLanguage(text);Console.WriteLine($"Language:
detectedLanguage.primary_language.name)C#:csharpCopiaModificaDetectedLanguage detectedLanguage = aiClient.DetectLanguage(text);Console.WriteLine($"Language: {detectedLanguage.Name}");b. Sentiment AnalysisClassifies sentiment positive, negative, neutral, mixed.Python:pythonCopiaModificasentimentAnalysis = ai_client.analyze_sentiment(documents=[text])[0]print("Sentiment:", sentimentAnalysis.sentiment)C#:csharpCopiaModificaDocumentSentiment sentimentAnalysis = aiClient.AnalyzeSentiment(text);Console.WriteLine($"Sentiment: {sentimentAnalysis.Sentiment}");c. Key Phrase ExtractionExtracts main concepts ideas text.Python:pythonCopiaModificaphrases = ai_client.extract_key_phrases(documents=[text])[0].key_phrasesfor phrase phrases: print(phrase)C#:csharpCopiaModificaKeyPhraseCollection phrases = aiClient.ExtractKeyPhrases(text);foreach (string phrase phrases) Console.WriteLine(phrase);d. Named Entity Recognition (NER)Identifies named entities like locations, people,
phrases = aiClient.ExtractKeyPhrases(text);foreach (string phrase phrases) Console.WriteLine(phrase);d. Named Entity Recognition (NER)Identifies named entities like locations, people, organizations.Python:pythonCopiaModificaentities = ai_client.recognize_entities(documents=[text])[0].entitiesfor entity entities: print(f"{entity.text} ({entity.category})")C#:csharpCopiaModificaCategorizedEntityCollection entities = aiClient.RecognizeEntities(text);foreach (var entity entities) Console.WriteLine($"{entity.Text} ({entity.Category})");e. Linked Entity RecognitionFinds entities external links (e.g., Wikipedia).Python:pythonCopiaModificaentities = ai_client.recognize_linked_entities(documents=[text])[0].entitiesfor entity entities: print(f"{entity.name} ({entity.url})")C#:csharpCopiaModificaLinkedEntityCollection linkedEntities = aiClient.RecognizeLinkedEntities(text);foreach (var linkedEntity linkedEntities) Console.WriteLine($"{linkedEntity.Name} ({linkedEntity.Url})"); Best Practices /
linkedEntities = aiClient.RecognizeLinkedEntities(text);foreach (var linkedEntity linkedEntities) Console.WriteLine($"{linkedEntity.Name} ({linkedEntity.Url})"); Best Practices / ConsiderationsUse Cloud Shell quick development/testingUse .env/appsettings.json secure sensitive infoBatch process documents reduce API callsAnalyze sentiment trends time reviews feedbackDetect named linked entities deeper contextual understandingConsider rate limits pricing tier analyzing large text volumes
