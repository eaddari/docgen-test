[H1] 01 Get started AI agent development Azure## 1. ProblemHow build intelligent AI agents autonomously automate business tasks using generative AI models Azure?---## 2. Solution Azure Leverage following develop, manage, deploy AI agents combine generative AI, contextual data, programmatic tools:-Azure AI Foundry Agent Service-OpenAI Assistants API-Frameworks:- Semantic Kernel - AutoGen - Microsoft Copilot Studio---## 3. Required Components -Model:- OpenAI Azure AI Foundry catalog models-Knowledge Sources:- Azure AI Search - Bing - Custom documents-Tools:- Built-in: e.g., code interpreter, Bing - Custom: e.g., Azure Functions-Conversation Thread:- Maintains context data exchange history-Agent Frameworks / SDKs:- Azure AI Foundry SDK - OpenAI Assistants API (OpenAI models only) - Semantic Kernel Agent Framework - AutoGen - Microsoft 365 Agents SDK - Microsoft Copilot Studio / Agent Builder---## 4. Architecture / Development ### Single-Agent Scenario (e.g., Expense Agent)1. User submits question 2. Agent grounds prompt using knowledge source 3. Model generates response 4. Agent performs action (e.g., submits expense claim) ### Multi-Agent Scenario (e.g., Travel + Expense Agents)1. User provides trip details Travel Agent 2. Travel Agent books collects receipts 3. Travel Agent invokes Expense Agent 4. Expense Agent submits claim ### Agent Construction Foundry Agent Service - Usevisual interfaceSDK- Define: - Model (LLM) - Knowledge source - Tools (built-in/custom) - Manage conversations via threads---## 5. Best Practices / Considerations -Copilot Studio Agent Builder:Ideal business users coding skills-Copilot Studio (low-code):Best Power Platform users-Microsoft 365 Agents SDK:Suitable agents Teams, Slack, etc.-Foundry Agent Service:Best enterprise-grade, scalable agent development-Semantic Kernel:Recommended multi-agent orchestration-Tool Selection Criteria:- User skill level - Target channels (e.g., Teams, Web) - Required integrations - Flexibility scalability