[H1] 02 Develop AI agent Azure AI Foundry Agent Service---## 1. ProblemHow build scalable, secure, customizable AI agent Azure automate complex tasks (e.g., customer service, report generation, workflow automation) without managing infrastructure writing excessive amounts code?---## 2. Solution AzureUseAzure AI Foundry Agent Servicefully managed service enables developers to:- Build, deploy, scale high-quality AI agents - Leverage generative AI models, integrated tools, custom functions - Avoid managing compute storage resources ---## 3. Required Components| Component | Description ||-----------------------------|-------------------------------------------------------------------------|| Azure AI Hub | Central workspace managing AI assets || Azure AI Project | Scoped environment building managing agents || Deployed AI Model | e.g., Azure OpenAI, Llama 3, Mistral || Azure AI Services | Underlying cognitive ML services || Optional: | || Azure Key Vault | Secure secrets credentials || Azure AI Search | Enable semantic search knowledge grounding || Azure Storage | External file access management |Agent Tools:-Knowledge Tools:Bing Search, File Search, Azure AI Search, Microsoft Fabric -Action Tools:Code Interpreter, Azure Function, Custom Function, OpenAPI Spec ---## 4. Architecture / Development### Development Flow1.Connect Azure AI Foundry Project- Use project endpoint - Authenticate via Microsoft Entra ID 2.Create Reference Agent- Specify model deployment - Define behavior usingInstructions- Assign tools resources 3.Create Thread(stateful conversation container) 4.Send Messagesinvoke agent 5.Check Statusretrieve responses generated artifacts 6.Repeatconversation loop 7.Deleteagent thread clean resources ### Development Options- Azure AI Foundry Portal (low-code)- SDKs / REST APIs (e.g., Python)- Bicep templates (for provisioning resources)---## 5. Best Practices / Considerations- Usethreadssecurely manage conversation state - Assign tools match agent responsibilities - Preferkeyless authenticationsecure access - Use Azure Blob Storage full control required - UseCopilot StudioSemantic Kernelfor: - Multi-agent orchestration - Microsoft 365 integration ---## 6. Sample Exam QuestionsQ1.What key benefits using Azure AI Foundry Agent Service building agents manually via APIs?A1.Simplifies development, requires less code, manages infrastructure, includes built-in tools like Code Interpreter Azure Functions.Q2.Which component manages state context AI agent's conversation Foundry?A2.ThreadQ3.When would choose Copilot Studio Semantic Kernel Foundry Agent Service?A3.When integrating Microsoft 365 orchestrating multiple agents.Q4.Whats difference knowledge tool action tool?A4.Knowledge tools provide grounding data (e.g., Bing Search); action tools perform tasks (e.g., Azure Function).Q5.Which models compatible Foundry Agent Service?A5.Azure OpenAI, Llama 3, Mistral, Cohere