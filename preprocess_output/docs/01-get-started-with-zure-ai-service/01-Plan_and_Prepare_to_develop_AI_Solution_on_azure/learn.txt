[H1] Azure AI Solution Design Guide## ProblemYou need design develop comprehensive AI solution using Microsoft Azure, involves choosing right services, tools, architectural patterns support capabilities generative AI, computer vision, speech, natural language processing ensuring responsible AI practices.## Solution AzureUseAzure AI servicesAzure AI Foundry platformplan, develop, manage AI-powered applications. Foundry supports generative AI development, agent-based workflows, orchestrations like Prompt Flow, enabling robust, scalable solutions.## Required ComponentsAzure AI Services: Vision, Speech, Language, Translator, OpenAI, Document Intelligence, Content Safety, Face, Custom VisionAzure AI Foundry(portal + SDK)Azure AI Hub (optional)advanced workflowsDevelopment Tools: * VS Code (local container image browser) * Azure CLI / Bicep / ARM provisioning * GitHub + GitHub CopilotSDKs APIs: * Azure AI Foundry SDK * Azure AI Services SDKs * Prompt Flow SDK * REST APIs## Architecture / Development### Azure AI Foundry StructureFoundry Projects: * Centralize development chat apps agent-based solutions * Connect Azure AI servicesHub-based Projects: * Include managed compute, storage, key vault * Ideal Prompt Flow, fine-tuning, multi-role teams (developers, data scientists)### Provisioning OptionsSingle-service resources: Ideal small apps evaluation (includes free tier)Multi-service resource: Easier management across services like OpenAI, Speech, Translator, Vision, etc.Important: Select correctAzure AI Servicesresource type ( icon), legacy Cognitive Services### Developer EnvironmentsVS Code container (pre-configured Foundry)Visual Studio / VS Code GitHub integrationSDKs available for: C#, Python, Node, Java, TypeScript## Best Practices / Considerations### Responsible AI Principles (Microsoft):Fairness: Avoid bias, ensure representativity training dataReliability & Safety: Use thresholds, validate confidence scores, rigorous testingPrivacy & Security: Protect sensitive data training/inferenceInclusiveness: Diverse team input developmentTransparency: Communicate system limitations, decision logic### Additional Considerations:Regional Availability: Check availability per service/modelCost Management: Use pricing calculator Foundry's centralized cost controlQuota Awareness: Especially VS Code compute containers model usageTool Selection: Match IDE SDKs language workflow preference## Sample Exam QuestionsQ1: You planning build AI application extracts key information scanned receipts. Which Azure service use?A1: Azure AI Document IntelligenceQ2: What benefit using Azure AI Foundry instead provisioning services individually?A2: Centralized project/resource management, integrated portal + SDKs, simplified deployment multi-service solutionsQ3: You need develop generative AI agent act autonomously based prompts. What Azure components consider?A3: Azure OpenAI (via Foundry), Azure AI Foundry Agent Service, optionally Prompt Flow SDKQ4: A teammate wants build model fine-tuning workflow securely store data secrets. Which type project suitable?A4: Hub-based project Azure AI FoundryQ5: What key difference Azure AI services icon Azure Cognitive Services icon provisioning portal?A5: The Azure AI services icon provides access latest services (e.g., OpenAI, Content Understanding), older Cognitive Services icon not.Q6: Your development team prefers working in-browser wants pre-configured SDKs. What recommended approach?A6: Use VS Code container image via Azure AI Foundry portal