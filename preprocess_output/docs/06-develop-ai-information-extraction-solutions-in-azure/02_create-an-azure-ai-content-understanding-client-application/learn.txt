[H1] Prepare Use AI Content Understanding REST API## ProblemYou need connect client application Azure AI Content Understanding REST API. How provision necessary resources retrieve required connection details?## Solution AzureProvisionAzure AI Services multi-service resourceeither directly via Azure portal creatingAzure AI Foundry hub, includes necessary services default. Then, retrieveendpointAPI keyauthenticate interact REST API.## Required Components-Azure AI Services resource-Azure AI Foundry hub(optional, includes AI Services resource)-Azure portalAzure AI Foundry portal-API keyendpoint URL## Architecture / Development1.Provision Resource: - Option 1: Create Azure AI Services resource Azure portal. - Option 2: Create Azure AI Foundry hub, includes AI Services resource.2.Retrieve Connection Details: - From Azure portal: Navigate AI Services resource get endpoint API key. - From Azure AI Foundry: Access project settings retrieve information.3.Programmatic Access: - UseAzure AI Foundry SDKMicrosoft Entra ID authentication connect project retrieve endpoint key programmatically.## Best Practices / Considerations- UseAzure AI Foundryvisual interface integrated project management.- Ensure subscription region support required services.- Securely store manage API keys usingAzure Key Vault.- UseMicrosoft Entra IDsecure, role-based access using SDK.## Exam-like Questions1. What two ways provision Azure AI Services resource Content Understanding?2. Where find endpoint API key Azure AI Services resource?3. What benefit using Azure AI Foundry Azure portal?4. How programmatically retrieve connection details REST API?5. Why Microsoft Entra ID recommended using Azure AI Foundry SDK?# Create Content Understanding analyzerIn scenarios, consider creating testing analyzers using visual interface Azure AI Foundry portal. However, cases might want create analyzer submitting JSON definition schema desired content fields REST API.## Defining schema analyzerAnalyzers based schemas define fields want extract generate content file. At simplest, schema set fields, specified JSON document, shown example analyzer definition:python{ "description": "Simple business card", "baseAnalyzerId": "prebuilt-documentAnalyzer", "config": { "returnDetails": true }, "fieldSchema": { "fields": { "ContactName": { "type": "string", "method": "extract", "description": "Name business card" }, "EmailAddress": { "type": "string", "method": "extract", "description": "Email address business card" } } }}This example custom analyzer schema based pre-built document analyzer, describes two fields would expect find business card: ContactName EmailAddress. Both fields defined string data types, expected extracted document (in words, string values expected exist document "read"; rather fields generated inferring information document).## Using REST API create analyzerWith analyzer definition place, use REST API submit Azure AI Content Understanding created. The JSON data submitted PUT request endpoint API key request header start analyzer creation operation.The response PUT request includes Operation-Location header, provides callback URL use check status request submitting GET request.You use HTTP-capable client tool language submit request. For example, following Python code submits request create analyzer based contents file named card.json (which assumed contain JSON definition described previously)```pythonimport jsonimport requests# Get buisness card schemawith open("card.json", "r") file: schema_json = json.load(file)# Use PUT request submit schema new analyzeranalyzer_name = "business_card_analyser"headers = { "Ocp-Apim-Subscription-Key": "<YOUR_API_KEY